
#postgresql
spring.datasource.url=jdbc:postgresql://localhost:5432/proposta
spring.datasource.username=keycloak
spring.datasource.password=password

#jpa
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#Openfeign
status.api=${STATUS_API:http://localhost:9999}
cartao.conta=${CARTAO_CONTA:http://localhost:8888}
feign.client.config.feignName.connectTimeout=5000
feign.client.config.feignName.readTimeout=5000
feign.client.config.feignName.loggerLevel= basic

#Actuator
management.endpoint.health.show-details=always
management.endpoint.beans.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

#Scheduling
chamada.cartao=${CHAMADA_CARTAO:5000}

#oauth
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/auth/realms/nosso-cartao
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs

#Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
#Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:Proposta}
#Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
#Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
